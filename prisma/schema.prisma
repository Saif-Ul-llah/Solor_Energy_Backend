datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["user", "public"]
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]

}
model Location {
    id          Int           @id @default(autoincrement())
    latitude    Float
    longitude   Float
    user        User?         @relation
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    plants      Plant[]
    @@schema("public")
}

model Plant {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())

    customerId String @unique
    customer   User   @relation("customer", fields: [customerId], references: [id], onDelete: Cascade)

    installerId String @unique
    installer   User   @relation("installer", fields: [installerId], references: [id], onDelete: Cascade)

    name       String
    plantType  PlantType
    capacity   Int
    region     String
    locationId Int?      @unique
    location   Location? @relation(fields: [locationId], references: [id], onDelete: Cascade)
    tariff     Float

    @@schema("public")
}

enum PlantType {
    Grid
    Grid_Meter
    Hybrid

    @@schema("public")
}

model User {
    id           String            @id @default(uuid())
    email        String            @unique
    password     String?
    phoneNumber  String
    role         Role
    IsActive     Boolean           @default(true)
    createdAt    DateTime          @default(now())
    locationId   Int?              @unique
    location     Location?         @relation(fields: [locationId], references: [id], onDelete: Cascade)
    fullName     String
    address      String?
    fcmToken     String?
    TFA_enabled  Boolean           @default(false)
    verification UserVerification?
    customer     Plant[]           @relation("customer")
    installer    Plant[]           @relation("installer")

    @@schema("user")
}

model UserVerification {
    id                Int                @id @default(autoincrement())
    userId            String             @unique
    resetOtp          Int?
    resetOtpExpiresAt DateTime?
    isEmailVerified   VerificationStatus @default(NOT_VERIFIED)
    refreshToken      String?
    user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@schema("user")
}

enum Role {
    ADMIN
    SUB_ADMIN
    DISTRIBUTOR
    INSTALLER
    CUSTOMER

    @@schema("user")
}

enum VerificationStatus {
    VERIFIED
    NOT_VERIFIED

    @@schema("user")
}

