model User {
    id           String            @id @default(uuid())
    email        String            @unique
    password     String?
    phoneNumber  String
    role         Role
    IsActive     Boolean           @default(true)
    createdAt    DateTime          @default(now())
    locationId   Int?              @unique
    location     Location?         @relation(fields: [locationId], references: [id], onDelete: Cascade)
    fullName     String
    address      String?
    fcmToken     String?
    TFA_enabled  Boolean           @default(false)
    verification UserVerification?
    customer     Plant[]           @relation("customer")
    installer    Plant[]           @relation("installer")

    parentId String?
    parent   User?   @relation("UserHierarchy", fields: [parentId], references: [id])
    children User[]  @relation("UserHierarchy")

    @@schema("user")
}

model UserVerification {
    id                Int                @id @default(autoincrement())
    userId            String             @unique
    resetOtp          Int?
    resetOtpExpiresAt DateTime?
    isEmailVerified   VerificationStatus @default(NOT_VERIFIED)
    refreshToken      String?
    user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@schema("user")
}

enum Role {
    ADMIN
    SUB_ADMIN
    DISTRIBUTOR
    INSTALLER
    CUSTOMER

    @@schema("user")
}

enum VerificationStatus {
    VERIFIED
    NOT_VERIFIED

    @@schema("user")
}
